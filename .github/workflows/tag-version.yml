name: Tag & Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest tag
        id: get_tag
        run: |
          echo "LATEST_TAG=$(git describe --tags --abbrev=0 || echo v0.0.0)" >> $GITHUB_ENV

      - name: Get commit messages
        id: get_commits
        run: |
          echo "COMMITS=$(git log ${{ env.LATEST_TAG }}..HEAD --pretty=format:'%s')" >> $GITHUB_ENV

      - name: Determine next version
        id: bump
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_TAG#v}"

          if echo "$COMMITS" | grep -qE '^feat'; then
            ((MINOR+=1)); PATCH=0
          elif echo "$COMMITS" | grep -qE '^fix'; then
            ((PATCH+=1))
          else
            echo "🔁 No relevant changes for version bump."
            echo "SKIP=true" >> $GITHUB_ENV
            exit 0
          fi

          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create new tag
        if: env.SKIP != 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag $NEW_VERSION
          git tag -f latest
          git push origin $NEW_VERSION
          git push origin -f latest
  update-changelog:
    needs: bump-version
    if: needs.bump-version.outputs.NEW_VERSION != ''
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get commit messages
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo v0.0.0)
          COMMITS=$(git log $LATEST_TAG..HEAD --pretty=format:'- %s')
          VERSION=${{ needs.bump-version.outputs.NEW_VERSION }}

          echo -e "## $VERSION - $(date +'%Y-%m-%d')\n$COMMITS\n\n$(cat CHANGELOG.md)" > CHANGELOG.md

      - name: Commit updated CHANGELOG
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG for ${{ needs.bump-version.outputs.NEW_VERSION }}"
          git push origin main

