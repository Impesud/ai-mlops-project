name: CI/CD Pipeline

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  PYTHON_VERSION: '3.11'

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      models_changed: ${{ steps.check_changes.outputs.models_changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip setuptools
          pip install -r requirements.txt pytest

      - name: Debug environment
        run: |
          . venv/bin/activate
          python --version
          pip freeze

      - name: Prepare MLflow directory
        if: github.event_name != 'pull_request'
        run: mkdir -p mlruns

      - name: Run pipeline logic
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          . venv/bin/activate
          chmod -R +x scripts/
          BRANCH=$(echo "${GITHUB_REF##*/}")

          if [[ "$BRANCH" == "main" ]]; then
            make ingest-prod-local
            make process-prod-local
            if [[ "${{ github.event_name }}" != "pull_request" ]]; then
              make train-prod-local
            fi
          else
            make ingest-dev-local
            make process-dev-local
            if [[ "${{ github.event_name }}" != "pull_request" ]]; then
              make train-dev-local
            fi
          fi

      - name: Run unit tests
        run: |
          . venv/bin/activate
          chmod -R +x tests/
          BRANCH=$(echo "${GITHUB_REF##*/}")
          if [[ "$BRANCH" == "main" ]]; then
            make test-prod
          else
            make test-dev
          fi

      - name: Upload MLflow model artifacts
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: mlruns/**/artifacts/model/

      - name: Detect changes in model-related directories
        id: check_changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            models:
              - 'models/**'
              - 'data_processing/**'
              - 'configs/**'

  docker-build-and-push:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ai-mlops-project:latest .
      - run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/ai-mlops-project:latest

  model-smoke-test:
    needs: build-and-test
    if: needs.build-and-test.outputs.models_changed == 'true' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install mlflow pandas
      - uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: mlruns
      - run: |
          nohup mlflow models serve -m mlruns/**/model --no-conda --port 1234 &
          sleep 10
      - run: |
          curl -X POST http://127.0.0.1:1234/invocations \
            -H 'Content-Type: application/json' \
            -d '{"dataframe_records":[{"value":42.0,"hour":12.0,"day_of_week":3.0,"month":6.0}]}' || true
      - run: echo "âœ… Model smoke test completed"

  semantic-release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/github

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release

