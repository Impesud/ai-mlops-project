name: CI/CD Pipeline

on:
  push:
    branches: [ dev, main ]

env:
  PYTHON_VERSION: '3.11'

jobs:

  ############################
  ## BUILD - FULL PIPELINE  ##
  ############################
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      models_changed: ${{ steps.check_changes.outputs.models_changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip setuptools
          pip install -r requirements.txt pytest

      - name: Debug environment versions
        run: |
          . venv/bin/activate
          python --version
          pip freeze

      - name: Prepare MLflow directory
        run: mkdir -p mlruns

      #############################
      ## Run full pipeline (DEV)
      #############################
      - name: Run pipeline on DEV branch
        if: github.ref == 'refs/heads/dev'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          . venv/bin/activate
          chmod -R +x scripts/
          make ingest-dev-local
          make process-dev-local
          make train-dev-local

      #############################
      ## Run full pipeline (MAIN)
      #############################
      - name: Run pipeline on MAIN branch
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
=======
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
>>>>>>> c87e1056 (Update Docker system)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          source venv/bin/activate
          make pipeline-dev-local

<<<<<<< HEAD
      - name: Run MAIN pipeline (Spark)
>>>>>>> ef067a5b (Update/fix docker configuration)
=======
      - name: Run full pipeline (MAIN branch)
>>>>>>> c87e1056 (Update Docker system)
>>>>>>> 2f27be62 (Update ci-cd)
=======
>>>>>>> 2ec495d5 (Update ci-cd.yml)
        if: github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          . venv/bin/activate
          chmod -R +x scripts/
          make ingest-prod-local
          make process-prod-local
          make train-prod-local

      ######################
      ## Run unit tests   ##
      ######################
      - name: Run unit tests
        run: |
          . venv/bin/activate
          pytest tests/

      ######################
      ## Upload artifacts ##
      ######################
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
=======
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
>>>>>>> c87e1056 (Update Docker system)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          source venv/bin/activate
          make pipeline-prod-local

      - name: Run unit tests
        run: |
          source venv/bin/activate
          pytest tests/

>>>>>>> ef067a5b (Update/fix docker configuration)
>>>>>>> 2f27be62 (Update ci-cd)
=======
>>>>>>> 2ec495d5 (Update ci-cd.yml)
      - name: Upload MLflow model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: mlruns/**/artifacts/model/

      ##############################
      ## Check if models changed  ##
      ##############################
      - name: Detect changes in models directory
        id: check_changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            models:
              - 'models/**'
              - 'data_processing/**'
              - 'configs/**'

  ##################################
  ## DOCKER BUILD (ONLY ON MAIN) ##
  ##################################
  docker-build-and-push:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ai-mlops-project:latest .

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/ai-mlops-project:latest

<<<<<<< HEAD
  ##################################
  ## MODEL SMOKE TEST (ONLY IF MODELS CHANGED)
  ##################################
=======
  ############################################
  ## MODEL SMOKE TEST (ONLY IF MODELS CHANGED)
  ############################################
>>>>>>> 2ec495d5 (Update ci-cd.yml)
  model-smoke-test:
    needs: build-and-test
    if: needs.build-and-test.outputs.models_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MLflow
        run: pip install mlflow pandas

      - name: Download trained model artifact
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: mlruns

      - name: Serve model for smoke test
        run: |
          nohup mlflow models serve -m mlruns/**/model --no-conda --port 1234 &
          sleep 10

      - name: Run inference smoke test
        run: |
          curl -X POST http://127.0.0.1:1234/invocations \
            -H 'Content-Type: application/json' \
            -d '{"dataframe_records":[{"value":42.0,"hour":12.0,"day_of_week":3.0,"month":6.0}]}' || true

      - name: âœ… Model smoke test completed
        run: echo "Smoke test finished successfully"
